@model RegisterModel
@{
    ViewData["Title"] = "Cadastro";
}

<div class="container mt-3 mt-md-5">
    <div class="row justify-content-center">
        <div class="col-12 col-sm-8 col-md-6 col-lg-4">
            <h2 class="text-center">Cadastro de Usuário</h2>
            <form id="registerForm" onsubmit="return handleRegister(event)">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Email"></label>
                    <input asp-for="Email" class="form-control" required placeholder="Digite seu e-mail"/>
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" type="password" class="form-control" required  placeholder="Digite a senha" />
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConfirmPassword"></label>
                    <input asp-for="ConfirmPassword" type="password" class="form-control" required placeholder="Digite novamente a senha" />
                    <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary btn-block">Cadastrar</button>
            </form>
            <div class="text-center mt-3">
                <p>Já Possui um Cadastro? <a href="/user/login" class="link-primary">Realize seu Login</a></p>
            </div>
        </div>
    </div>
</div>

<script>
    
async function registerUser(email, password, confirmPassword) {
        try {
            const response = await fetch('/user/register', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Email: email,
                    Password: password,
                    ConfirmPassword: confirmPassword
                })
            });

            if (!response.ok) {
                let errorMessages = [];
                var a = response.headers.get("content-type");
                if (response.headers.get("content-type")?.includes("json")) {
                    const errorResponse = await response.json(); 
                    const errorKeys = Object.keys(errorResponse.errors);

                    if (errorKeys.length > 0) {
                        errorKeys.forEach(key => {
                            errorMessages.push(...errorResponse.errors[key]); 
                        });
                    } else {
                        errorMessages.push("Erro desconhecido.");
                    }
                } else {
                    const textResponse = await response.text();
                    errorMessages.push(textResponse);
                }

                if (errorMessages.length > 0) {
                    errorMessages.forEach((msg, index) => {
                        showErrorToast(`Erro ${index + 1}: ${msg}`);
                    });
                }
            } else {
                const result = await response.json();
                window.location.href = result.redirectUrl;
            }
        } catch (error) {
            showErrorToast("Houve um erro ao tentar registrar o usuário. Tente novamente mais tarde." + error);
        }
     };

    function showErrorToast(message) {
            toastr.error(message);
    };

    function handleRegister(event) {
        event.preventDefault();

        const email = document.querySelector('input[name="Email"]').value;
        const password = document.querySelector('input[name="Password"]').value;
        const confirmPassword = document.querySelector('input[name="ConfirmPassword"]').value;
        registerUser(email, password, confirmPassword);
    };

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

}